Update:
Version 6.0
Adding in g_kuh

Version 5.0
Reverse the modification of V2.0 but keep the change of V3.0 and V4.0, because I want to highlight the effect of adaptive average;
Add line 	   
do_ene = (do_per_step(step, ir->nstenergy) || bLastStep);
in front of 	    
print_ebin(outf->fp_ene, do_ene, do_dr, do_or, do_log ? fplog : NULL,
	  step, t,
	  eprNORMAL, bCompact, mdebin, fcd, groups, &(ir->opts));

This is for making sure the output frequency of energy file follows nstenergy.


Version 4.0
This version includes the latest change by ZTW, such as new implementation of MTSEED.

Version 3.0
Change the dt from mb->lgv_dt * BOLTZ to just mb->lgv_dt, thus giving faster integration for Langevin Equation;
Change the line in function mb_lrbal(): from "if (fabs(s0[0] + s0[1]) < 1e-3)" to "if (fabs(s0[0] + s0[1]) < 1e-6)", in this way we allows the maximum ensemble_factor;


Version 2.0
Change the array of mb->ampf into a two-dimension array with mb->n * mb->m;
Function mb_normalize() scales specifically in each bin j for estimation of beta_i;
DID NOT Flush the memory to TRACE file more frequently, for keeping the speed of simulation (turn off the function fflush())


Version 1.0
Change some code for the estimation of energy, so that it is consistent with what is written in the paper;

